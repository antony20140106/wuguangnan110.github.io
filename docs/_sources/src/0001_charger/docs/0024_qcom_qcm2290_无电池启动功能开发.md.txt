# 概述

高通qcm2290平台，目前要求无电池启动功能，开发一下。

# 启动流程

![0024_0006.png](images/0024_0006.png)

目前缺少ABL阶段检测有无电池，本文目的就是添加此功能。

# 小知识

C语言中，如果函数直接使用枚举类型作为入参，会带来风险，如果外部随意传入 一个大于枚举类型的值，会被强制转换成枚举类型的合法值。也就是说，会强制将数据截断成枚举类型的范围内的值。函数参数 i2c_instance 为枚举类型i2c_instance，在使用函数 i2c_init 时，参数只接收枚举值 I2C_INSTANCE_001 ~ I2C_INSTANCE_MAX，输入数值1···或枚举值之外的值都是错误的。
```C++
typedef enum {
  I2C_INSTANCE_001,          /**< Instance 01. */
  I2C_INSTANCE_002,          /**< Instance 02. */
  I2C_INSTANCE_003,          /**< Instance 03. */
  I2C_INSTANCE_004,          /**< Instance 04. */
  I2C_INSTANCE_005,          /**< Instance 05. */
  I2C_INSTANCE_006,          /**< Instance 06. */
  I2C_INSTANCE_007,          /**< Instance 07. */
  I2C_INSTANCE_008,          /**< Instance 08. */
  I2C_INSTANCE_009,          /**< Instance 09. */
  I2C_INSTANCE_010,          /**< Instance 10. */
  I2C_INSTANCE_011,          /**< Instance 11. */
  I2C_INSTANCE_012,          /**< Instance 12. */

  I2C_INSTANCE_MAX,          /**< Instance Check. */

} i2c_instance;

EFI_STATUS i2c_init(i2c_instance I2C_INSTANCE)
{
    if (I2C_INSTANCE >= I2C_INSTANCE_001 &&I2C_INSTANCE <= I2C_INSTANCE_MAX)
}
```

# XBL开机电压检测

由于开机过程必须要检测开机电压，那没有电池情况下vbat是多少？首先我们硬件需要准确关机电压，根据高通方案，需要将VBAT_P接到电池vbat脚，而目前接的是vsys，需要改回来。

* 目前项目接法：

![0024_0000.png](images/0024_0000.png)

* 高通推荐接法：

![0024_0001.png](images/0024_0001.png)

* PIN脚解释：

![0024_0002.png](images/0024_0002.png)

无电池启动，也就是插入usb需要启动，那XBL阶段必然会检测vbat电压，也就是说无电池时也需要charger ic打开vbat，根据以下charger ic datasheet中描述，
只需要检测到usb插入，打开充电即可：

![0024_0003.png](images/0024_0003.png)

经测量，开机后vbat是4.35v左右，跟预期一致。

# 跳过关机充电模式

目前插入usb启动是直接进入关机充电模式了，可以从log中找到原因：
```log
[    0.922874] qcom,qpnp-power-on 1c40000.qcom,spmi:qcom,pm2250@0:qcom,power-on@800: PMIC@SID0 Power-on reason: Triggered from CBL (External Power Supply) and 'cold' boot
[    0.937927] qcom,qpnp-power-on 1c40000.qcom,spmi:qcom,pm2250@0:qcom,power-on@800: PMIC@SID0: Unknown power-off reason
```

从上面可以知道是CBL引脚触发的冷启动，CBL引脚在模块上接到vbus引脚，也就是插入usb会触发冷启动，我们从关机模式文档中可以得知，冷启接usb会进入关机充电模式，刚好符合条件。
* [0023_qcom_qcm2290_关机充电模式分析.md](0023_qcom_qcm2290_关机充电模式分析.md)

![0024_0004.png](images/0024_0004.png)
![0024_0005.png](images/0024_0005.png)

那就需要在关机充电增加一个无电池判断了，需要在ABL阶段通过i2c读取bq27z746这款电量计是否存在，ABL阶段i2c接口如何增加请参考：
* [0008_qcom_ABL_增加i2c接口.md](/0016_qcom_doc/docs/0008_qcom_ABL_增加i2c接口.md)

我们增加的接口`is_battery_exist()`和`kernel cmdline`信息如下：
```diff
--- a/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Application/LinuxLoader/LinuxLoader.c
+++ b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Application/LinuxLoader/LinuxLoader.c
@@ -54,6 +54,7 @@
 //[FEATURE]-Add-BEGIN by xielianxiong@xxxxx.com, 2022/09/08, for fastboot flash,init uart
 #include <xxxxxLib/xxxxx_serial.h>
 //[FEATURE]-Add-end by xielianxiong@xxxxx.com, 2022/09/08, for fastboot flash,init uart
+#include <I2cLib/i2c.h>
 #define MAX_APP_STR_LEN 64
 #define MAX_NUM_FS 10
 #define DEFAULT_STACK_CHK_GUARD 0xc0c0c0c0
@@ -249,6 +250,14 @@ LinuxLoaderEntry (IN EFI_HANDLE ImageHandle, IN EFI_SYSTEM_TABLE *SystemTable)

   BootStatsSetTimeStamp (BS_BL_START);

+  //[NEW FEATURE]-BEGIN by (xxx@xxxxx.com), 2022/09/08 add i2c function in ABL.
+  Status = i2c_init(I2C_INSTANCE_001);
+  if (Status != EFI_SUCCESS) {
+       DEBUG ((EFI_D_ERROR, "i2c init fail!: %r\n", Status));
+       return Status;
+  }
+  //[NEW FEATURE]-END by (xxx@xxxxx.com), 2022/09/08 add i2c function in ABL.
+
   // Initialize verified boot & Read Device Info
   Status = DeviceInfoInit ();
   if (Status != EFI_SUCCESS) {
diff --git a/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Application/LinuxLoader/LinuxLoader.inf b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Application/LinuxLoader/LinuxLoader.inf
index d2ca193075e..70fc1dc4527 100755
--- a/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Application/LinuxLoader/LinuxLoader.inf
+++ b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Application/LinuxLoader/LinuxLoader.inf
@@ -63,6 +63,7 @@
        UbsanLib
        xxxxxLib
        UartCoreLib
+       I2cLib

 [Guids]
        gEfiFileInfoGuid
diff --git a/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/BootLib/UpdateCmdLine.c b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/BootLib/UpdateCmdLine.c
index ddf7a8875d3..d6301b2e51a 100755
--- a/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/BootLib/UpdateCmdLine.c
+++ b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/BootLib/UpdateCmdLine.c
@@ -52,6 +52,7 @@
 //[FEATURE]-Add-BEGIN by xielianxiong@xxxxx.com, 2021/12/06, for cmdline sn
 #include <xxxxxLib/xxxxx_sp.h>
 //[FEATURE]-Add-end by xielianxiong@xxxxx.com, 2021/12/06, for cmdline sn
+#include <I2cLib/xxxxx_battery.h>

 STATIC CONST CHAR8 *DynamicBootDeviceCmdLine =
                                       " androidboot.boot_devices=soc/";
@@ -676,6 +677,9 @@ UpdateCmdLine (CONST CHAR8 *CmdLine,
 //[feature]-del-begin xielianxiong@xxxxx.com 20220830,for shutdown boot into charging mode
              /*IsChargingScreenEnable () &&*/
 //[feature]-del-end xielianxiong@xxxxx.com 20220830,for shutdown boot into charging mode
+//[FEATURE]-BEGIN by (xxx@xxxxx.com), 2022/09/08 for Turn off power off charging mode when no-battery-startup
+              is_battery_exist() &&
+//[FEATURE]-END by (xxx@xxxxx.com), 2022/09/08 for Turn off power off charging mode when no-battery-startup
              !Recovery) {
     DEBUG ((EFI_D_INFO, "Device will boot into off mode charging mode\n"));
--- /dev/null
+++ b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/I2cLib/xxxxx_battery.c
@@ -0,0 +1,32 @@
+/* I2C Interfaces */
+#include "xxxxx_battery.h"
+#include <Uefi.h>
+//#include <Library/PcdLib.h>
+#include <Library/UefiLib.h>
+#include <Library/UefiApplicationEntryPoint.h>
+#include <Library/UefiBootServicesTableLib.h>
+//#include <Library/TestInterface.h>
+#include "EFIPmicVreg.h"
+//#include <Protocol/EFII2C.h>
+#include "EFITlmm.h"
+//#include <Protocol/EFIPmicGpio.h>
+//#include <Library/QcomLib.h>
+#include "DebugLib.h"
+#include "i2c.h"
+
+int is_battery_exist(VOID)
+{
+       unsigned int type = 0;
+
+       linuxc_i2c_write_16bit_reg(0x55,0x3e,0x0001);
+       type = linuxc_i2c_read_16bit_reg(0x55,0x40);//gauge中存id的寄存器地址
+       //DEBUG((EFI_D_INFO, "bq27z746 get dev type:0x%X\n", type));
+
+       if (type == BQ27Z746_DeviceType) {
+               DEBUG((EFI_D_ERROR, "battery is exist\n", type));
+               return 1;
+       }
+
+       DEBUG((EFI_D_ERROR, "battery is not exist\n", type));
+       return 0;
+}
\ No newline at end of file
diff --git a/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/I2cLib/xxxxx_battery.h b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/I2cLib/xxxxx_battery.h
new file mode 100755
index 00000000000..cef4bb84bf9
--- /dev/null
+++ b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/I2cLib/xxxxx_battery.h
@@ -0,0 +1,8 @@
+#ifndef _xxx_BATTERY_H_
+#define _xxx_BATTERY_H_
+
+//BQ27Z746_reg_DeviceType
+#define BQ27Z746_DeviceType  0x1746
+
+extern int is_battery_exist(VOID);
+#endif

--- a/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/xxxxxLib/xxxxx_cmdline.c
+++ b/UM.9.15/bootable/bootloader/edk2/QcomModulePkg/Library/xxxxxLib/xxxxx_cmdline.c
@@ -3,6 +3,7 @@
 #include "xxxxx_lib.h"
 #include "xxxxx_edk2_libc.h"
 #include "xxxxx_cmdline.h"
+#include <I2cLib/xxxxx_battery.h>

 #define MAX_PATH_SIZE 72

@@ -204,6 +205,14 @@ void update_bootargs(char *cmdline)
        if(0 == GetBtMAC(tmpbuf,MAC_NV_LENGTH*2+5)){
         bootargs_add("xxxxxbtmac=", tmpbuf, cmdline);//btmac
     }
-//[FEATURE]-Add-END by xielianxiong@xxxxx.com, 2021/12/13, for init other cmdline property
-}

+       //[FEATURE]-BEGIN by (xxx@xxxxx.com), 2022/09/08 for Turn off power off charging mode when no-battery-startup
+       if (!is_battery_exist()) {
+               bootargs_add("start_without_battery=", "1", cmdline);//Start without battery
+       }
+       else {
+               bootargs_add("start_without_battery=", "0", cmdline);
+       }
+       //[FEATURE]-END by (xxx@xxxxx.com), 2022/09/08 for Turn off power off charging mode when no-battery-startup
+//[FEATURE]-Add-END by xielianxiong@xxxxx.com, 2021/12/13, for init other cmdline property
+}
```

# 默认Try.SRC插入PD充电器启动死机重启

目前已知typec驱动开机时会通过`typec_init`初始化默认状态，当无电池插入PD充电器启动时，系统出现重启现象，打印如下：
```
[    7.818358] __tcpc_class_complete_work = type_c_port0
[    7.824277] i2c_geni 4a80000.i2c: i2c error :-107
[    7.834284] ///PD dbg info 41d
[    7.837424] <    7.834>TCPC-TYPEC:typec_init: TrySRC
[    7.845761] tcpc_device_irq_enable : tcpc irq enable OK!
[    7.848587] husb311_set_low_power_mode - write HUSB311_REG_BMC_CTRL=0x7
[    7.851411] ALSA device list:
[    7.857897] pd_tcp_notifier_call event = ATTACHWAIT_SNK
[    7.860698]   No soundcards found.
[    7.864084] ///PD dbg info 250d
[    7.872515] <    7.842>TCPC-TYPEC:PowerOffCharge
[    7.872515] <    7.842>TCPC-TYPEC:** Unattached.SNK
[    7.872515] <    7.846>TCPC-TCPC:Alert:0x0001, Mask:0x21067f
[    7.872515] <
[    7.872517]    7.846>TCPC-TCPC:tcpci_alert_cc_changed ++
[    7.872517] <    7.847>TCPC-TYPEC:[CC_Alert] 7/0
[    7.872517] <    7.857>TCPC-TYPEC:** AttachWait.SNK
[    7.906564] Freeing unused kernel memory: 4992K
[    7.911221] Run /init as init process
[    7.931264] init: init first stage started!
[    7.935634] init: Unable to open /lib/modules, skipping module loading.
[    7.943004] init: [libfs_mgr]dt_fstab: Skip disabled entry for partition vendor
[    7.950382] init: [libfs_mgr]ReadFstabFromDt(): failed to read fstab from dt
[    7.957696] init: [libfs_mgr]dt_fstab: Skip disabled entry for partition vendor
[    7.966653] init: Using Android DT directory /proc/device-tree/firmware/android/
[    7.978024] ///PD dbg info 71d
[    7.981135] <    7.977>TCPC-TYPEC:[CC_Change] 7/0
[    7.981135] <    7.977>TCPC-TYPEC:** Try.SRC

Format: Log Type - Time(microsec) - Message - Optional Info
Log Type: B - Since Boot(Power On Reset),  D - Delta,  S - Statistic
S - QC_IMAGE_VERSION_STRING=BOOT.XF.4.1-00343-KAMORTALAZ-1
```

* 尝试将默认配置成SNK或者DRP则不会重启，SNK打印如下，attach成功了：
```
[    7.851634] ///PD dbg info 41d
[    7.854723] <    7.851>TCPC-TYPEC:typec_init: TrySNK
[    7.855163] tcpc_device_irq_enable : tcpc irq enable OK!
[    7.858004] husb311_set_low_power_mode - write HUSB311_REG_BMC_CTRL=0x7
[    7.858179] pd_tcp_notifier_call event = ATTACHWAIT_SNK
[    7.877238] ALSA device list:
[    7.880073] ///PD dbg info 250d
[    7.880229]   No soundcards found.
[    7.883354] <    7.852>TCPC-TYPEC:PowerOffCharge
[    7.883354] <    7.852>TCPC-TYPEC:** Unattached.SNK
[    7.883354] <    7.856>TCPC-TCPC:Alert:0x0001, Mask:0x21067f
[    7.883354] <
[    7.883356]    7.856>TCPC-TCPC:tcpci_alert_cc_changed ++
[    7.883356] <    7.856>TCPC-TYPEC:[CC_Alert] 0/7
[    7.883356] <    7.858>TCPC-TYPEC:** AttachWait.SNK
[    7.921210] Freeing unused kernel memory: 4992K
[    7.925844] Run /init as init process
[    7.945406] init: init first stage started!
[    7.949781] init: Unable to open /lib/modules, skipping module loading.
[    7.957220] init: [libfs_mgr]dt_fstab: Skip disabled entry for partition vendor
[    7.964587] init: [libfs_mgr]ReadFstabFromDt(): failed to read fstab from dt
[    7.971900] init: [libfs_mgr]dt_fstab: Skip disabled entry for partition vendor
[    7.978287] ///PD dbg info 76d
[    7.979103] pd_tcp_notifier_call event = SINK_VBUS
[    7.979113] charger soc:charger: pd_tcp_notifier_call sink vbus 5000mV 3000mA type(0x01)
[    7.979116] pd_tcp_notifier_call - sink vbus
[    7.979131] xxx_CHG: psy_charger_set_property: prop:8 5000000
[    7.979139] xxx_CHG: _wake_up_charger:
[    7.979163] pd_tcp_notifier_call event = TYPEC_STATE
[    7.979167] tcpc_notifier_call, old_state = UNATTACHED, new_state = ATTACHED_SNK
```

* DRP如下：
```
[    7.855901] ///PD dbg info 38d
[    7.858980] <    7.855>TCPC-TYPEC:typec_init: DRP
[    7.859425] tcpc_device_irq_enable : tcpc irq enable OK!
[    7.869489] ALSA device list:
[    7.872510]   No soundcards found.
[    7.878095] husb311_set_low_power_mode - write HUSB311_REG_BMC_CTRL=0x7
[    7.878975] Freeing unused kernel memory: 4992K
[    7.884070] ///PD dbg info 210d
[    7.884074] <    7.856>TCPC-TYPEC:PowerOffCharge
[    7.884074] <    7.856>TCPC-TYPEC:** Unattached.SNK
[    7.884074] <    7.876>TCPC-TCPC:Alert:0x0001, Mask:0x21067f
[    7.884074] <
[    7.884076]    7.876>TCPC-TCPC:tcpci_alert_cc_changed ++
[    7.884076] <    7.876>TCPC-TYPEC:[CC_Alert] 0/7
[    7.892502] pd_tcp_notifier_call event = ATTACHWAIT_SNK
[    7.909325] ///PD dbg info 40d
[    7.909383] Run /init as init process
[    7.931293] <    7.892>TCPC-TYPEC:** AttachWait.SNK
[    7.936497] init: init first stage started!
[    7.940876] init: Unable to open /lib/modules, skipping module loading.
[    7.948371] init: [libfs_mgr]dt_fstab: Skip disabled entry for partition vendor
[    7.955741] init: [libfs_mgr]ReadFstabFromDt(): failed to read fstab from dt
[    7.963041] init: [libfs_mgr]dt_fstab: Skip disabled entry for partition vendor
[    7.971679] init: Using Android DT directory /proc/device-tree/firmware/android/
[    8.012590] ///PD dbg info 76d
[    8.013567] pd_tcp_notifier_call event = SINK_VBUS
[    8.015677] <    8.012>TCPC-TYPEC:[CC_Change] 0/7
[    8.015677] <    8.012>TCPC-TYPEC:** Attached.SNK
[    8.020568] charger soc:charger: pd_tcp_notifier_call sink vbus 5000mV 3000mA type(0x01)
[    8.038350] pd_tcp_notifier_call - sink vbus
[    8.042743] xxx_CHG: psy_charger_set_property: prop:8 5000000
[    8.048611] xxx_CHG: _wake_up_charger:
[    8.052446] pd_tcp_notifier_call event = TYPEC_STATE
[    8.052469] xxx_CHG: Found primary charger
[    8.057449] tcpc_notifier_call, old_state = UNATTACHED, new_state = ATTACHED_SNK
```


* 尝试在获取默认状态dts部分做无电池启动判断，无电池时默认role配置为sink。
```C++
static int husb311_tcpcdev_init(struct husb311_chip *chip, struct device *dev)
{
	if (of_property_read_u32(np, "tcpc,role_def", &val) >= 0) {
		if (val >= TYPEC_ROLE_NR)
			desc->role_def = TYPEC_ROLE_DRP;
		else {
			desc->role_def = val;
			if (!xxxxx_bat_exist_from_cmdline()) {
				dev_info(dev, "%s no bettery startup, role_def is sink!\n", __func__);
				desc->role_def = TYPEC_ROLE_SNK - 1;
			}
		}
	} else {
		dev_info(dev, "use default Role DRP\n");
		desc->role_def = TYPEC_ROLE_DRP;
	}
}
```

* 初始化过了，无电池时默认TrySNK是能起来的：
```
[    7.863012] ///PD dbg info 154d
[    7.866183] <    7.862>TCPC-TYPEC:typec_init: TrySNK
[    7.866183] <    7.862>TCPC-TYPEC:typec_init: 111
[    7.866183] <    7.862>TCPC-TYPEC:typec_init: 22
[    7.866183] <    7.862>T
[    7.866185] CPC-TYPEC:typec_init: 222
[    7.866539] tcpc_device_irq_enable : tcpc irq enable OK!
[    7.892455] ALSA device list:
[    7.895454]   No soundcards found.
[    7.900919] husb311_set_low_power_mode - write HUSB311_REG_BMC_CTRL=0x7
[    7.901929] Freeing unused kernel memory: 4992K
[    7.904073] ///PD dbg info 210d
[    7.904076] <    7.863>TCPC-TYPEC:PowerOffCharge
[    7.904076] <    7.863>TCPC-TYPEC:** Unattached.SNK
[    7.904076] <    7.898>TCPC-TCPC:Alert:0x0001, Mask:0x21067f
[    7.904076] <
[    7.904078]    7.899>TCPC-TCPC:tcpci_alert_cc_changed ++
[    7.904078] <    7.899>TCPC-TYPEC:[CC_Alert] 7/0
[    7.915327] pd_tcp_notifier_call event = ATTACHWAIT_SNK
[    7.932126] ///PD dbg info 40d
[    7.932129] <    7.915>TCPC-TYPEC:** AttachWait.SNK
[    7.932224] Run /init as init process
[    7.974815] init: init first stage started!
[    7.979193] init: Unable to open /lib/modules, skipping module loading.
[    7.986596] init: [libfs_mgr]dt_fstab: Skip disabled entry for partition vendor
[    7.993983] init: [libfs_mgr]ReadFstabFromDt(): failed to read fstab from dt
[    8.001376] init: [libfs_mgr]dt_fstab: Skip disabled entry for partition vendor
[    8.010145] init: Using Android DT directory /proc/device-tree/firmware/android/
[    8.035439] ///PD dbg info 76d
[    8.038572] <    8.035>TCPC-TYPEC:[CC_Change] 7/0
[    8.038572] <    8.035>TCPC-TYPEC:** Attached.SNK
[    8.048300] pd_tcp_notifier_call event = SINK_VBUS
[    8.053148] charger soc:charger: pd_tcp_notifier_call sink vbus 5000mV 3000mA type(0x01)
[    8.061304] pd_tcp_notifier_call - sink vbus
[    8.065635] xxx_CHG: psy_charger_set_property: prop:8 5000000
[    8.071435] xxx_CHG: _wake_up_charger:
[    8.075260] pd_tcp_notifier_call event = TYPEC_STATE
[    8.075283] xxx_CHG: Found primary charger
[    8.080294] tcpc_notifier_call, old_state = UNATTACHED, new_state = ATTACHED_SNK
```

# 默认SNK_HRESET断电重启

* 但是启动到18s时出现重启：
```
[   17.937582] ///PD dbg info 73d
[   17.940861] <   17.937>TCPC-DC> dc_dfp_none
[   17.940861] <   17.937>TCPC-PE:PD -> SNK_START (CUN)
[   17.972153] ///PD dbg info 185d
[   17.975323] <   17.950>TCPC-PE-EVT:reset_prl_done
[   17.975323] <   17.950>TCPC-PE:PD -> SNK_DISC (CUN)
[   17.975323] <   17.950>TCPC-PE:WaitVBUS=1
[   17.975323] <   17.950>TCPC-PE-E
[   17.975325] VT:vbus_high
[   17.975325] <   17.950>TCPC-PE:PD -> SNK_WAIT_CAP (CUN)
[   18.022396] create /data/lwm2m
[   18.022597] init: Top-level directory needs encryption action, eg mkdir /data/lwm2m <mode> <uid> <gid> encryption=Require
[   18.037890] init: Verified that /data/lwm2m has the encryption policy 62d12442c19e29a762ee910fe31519b3 v2 modes 1/4 flags 0x12
[   18.218179] ipa ipa3_ioctl:1724 IPA not ready, waiting for init completion
[   18.322718] ///PD dbg info 106d
[   18.322865] pd_tcp_notifier_call event = HARD_RESET_STATE
[   18.325911] <   18.322>TCPC-PE-EVT:timer
[   18.325911] <   18.322>TCPC-PE:PD -> SNK_HRESET (CUN)
[   18.325911] <   18.322>TCPC-PE:Send HARD Reset
[   18.331407] i2c_geni 4a80000.i2c: i2c error :-107
[   18.348816] xxx_CHG: psy_charger_set_property: prop:123 1
[   18.356562] ///PD dbg info 47d
[   18.356840] pd_tcp_notifier_call event = PD_STATE
[   18.359649] <   18.356>TCPC-TCPC:Alert:0x0050, Mask:0x0fff
[   18.370300] charger soc:charger: pd_tcp_notifier_call pd state = 9
[   18.377648] pd_tcp_notifier_call event = SINK_VBUS
[   18.380235] ///PD dbg
Format: Log Type - Time(microsec) - Message - Optional Info
Log Type: B - Since Boot(Power On Reset),  D - Delta,  S - Statistic
```

问了A800工程师，说是无电池时不能进行硬复位操作`HARD Reset`，需要改成软复位，硬复位会让typec断一下电，那肯定不行，修改如下：
```diff
--- a/UM.9.15/kernel/msm-4.19/drivers/misc/xxxxx/tcpc/pd_process_evt_snk.c
+++ b/UM.9.15/kernel/msm-4.19/drivers/misc/xxxxx/tcpc/pd_process_evt_snk.c
@@ -18,6 +18,7 @@
 #include "inc/tcpci_event.h"
 #include "inc/pd_process_evt.h"
 #include "inc/tcpci_typec.h"
+#include "xxxxxpd-charger-manager.h"

 /* PD Control MSG reactions */

@@ -413,7 +414,14 @@ static inline bool pd_process_timer_msg(
        case PD_TIMER_PS_TRANSITION:
                if ((pd_port->pe_state_curr != PE_SNK_DISCOVERY) &&
                        (pe_data->hard_reset_counter <= PD_HARD_RESET_COUNT)) {
-                       PE_TRANSIT_STATE(pd_port, PE_SNK_HARD_RESET);
+                       //[FEATURE]-Add-BEGIN by (xxx@xxxxx.com), defaults to soft reset when no-battery-startup 2022/09/26
+                       if (!xxxxx_bat_exist_from_cmdline()) {
+                               PE_TRANSIT_STATE(pd_port, PE_SNK_SEND_SOFT_RESET);
+                       }
+                       else {
+                               PE_TRANSIT_STATE(pd_port, PE_SNK_HARD_RESET);
+                       }
+                       //[FEATURE]-Add-END by (xxx@xxxxx.com), defaults to soft reset when no-battery-startup 2022/09/26
                        return true;
                }
```

* 修改后，整机正常启动，适配器成功拉到9v：
```
[   17.927961] ///PD dbg info 73d
[   17.927967] <   17.927>TCPC-DC> dc_dfp_none
[   17.927967] <   17.927>TCPC-PE:PD -> SNK_START (CUN)
[   17.933329] F2FS-fs (dm-8): recover_data: ino = 1314 (i_size: recover) recovered = 2, err = 0
[   17.952076] ///PD dbg info 185d
[   17.955429] F2FS-fs (dm-8): recover_inode: ino = 1314, name = <encrypted>, inline = 1
[   17.958474] <   17.928>TCPC-PE-EVT:reset_prl_done
[   17.958474] <   17.928>TCPC-PE:PD -> SNK_DISC (CUN)
[   17.958474] <   17.928>TCPC-PE:WaitVBUS=1
[   17.958474] <   17.928>TCPC-PE-E
[   17.958477] VT:vbus_high
[   17.958477] <   17.928>TCPC-PE:PD -> SNK_WAIT_CAP (CUN)
[   18.300805] xxxxx_bat_exist_from_cmdline = 0
[   18.300812] ///PD dbg info 29d
[   18.305213] i2c_geni 4a80000.i2c: i2c error :-107
[   18.308119] <   18.300>TCPC-PE-EVT:timer
[   18.344128] ///PD dbg info 294d
[   18.353135] pd_tcp_notifier_call event = SINK_VBUS
[   18.353377] <   18.304>TCPC-PE:PD -> SNK_SEND_SRESET (CUN) //软复位
[   18.353377] <   18.315>TCPC-TCPC:Alert:0x0040, Mask:0x0fff
[   18.353377] <   18.316>TCPC-PE-EVT:good_crc
[   18.353377] <
[   18.353379]   18.319>TCPC-TCPC:Alert:0x0004, Mask:0x0fff
[   18.353379] <   18.320>TCPC-PE-EVT:accept
[   18.353379] <   18.320>TCPC-PE:PD -> SNK_WAIT_CAP (CUN)
[   18.353379] <   18.34
[   18.358028] charger soc:charger: pd_tcp_notifier_call sink vbus 9000mV 277mA type(0x86)
[   18.374812] 3>TCPC-TCPC:Alert:0x0004, Mask:0x0fff
[   18.400139] ///PD dbg info 891d
[   18.404511] pd_tcp_notifier_call - sink vbus
[   18.404528] xxx_CHG: psy_charger_set_property: prop:8 9000000
[   18.404536] xxx_CHG: _wake_up_charger:
[   18.404578] xxx_CHG: psy_charger_get_property psp:122
[   18.404587] xxx_CHG: psy_charger_set_property: prop:122 1
[   18.404594] xxx_CHG: pd_status:1
[   18.404601] xxx_CHG: _wake_up_charger:
[   18.404611] xxx_CHG: psy_charger_set_property: prop:143 9000000
[   18.404619] xxx_CHG: set pd_charging_voltage_max:9000 mv
[   18.404621] xxx_CHG: xxxxx_is_charger_on chr_type = [DCP] last_chr_type = [DCP]
[   18.404626] xxx_CHG: _wake_up_charger:
[   18.404635] xxx_CHG: psy_charger_set_property: prop:124 277000
[   18.404637] xxx_CHG: [SW_JEITA] Battery Normal Temperature between 10 and 45 !!
[   18.404643] xxx_CHG: set pd_charging_current_max:277 ma
[   18.404646] xxx_CHG: [SW_JEITA]preState:3 newState:3 tmp:25 cv:0
[   18.404650] xxx_CHG: _wake_up_charger:
[   18.404656] xxx_CHG: tmp:25 (jeita:1 sm:3 cv:0 en:1) (sm:1) en:1 c:0 s:0 ov:0 1 1
[   18.412582] xxx_CHG: support_fast_charging = 1
[   18.412595] xxx_CHG: chg:-1,-1,2000,3000 type:5:0 usb_unlimited:0 usbif:0 usbsm:0 aicl:-1 atm:0 bm:0 b:0
[   18.412603] xxx_CHG: support pd charger do_algorithm input_current_limit:2000 charging_current_limit:4080
[   18.422905] xxx_CHG_MP2721: reg :1  read data:0x13
[   18.428458] xxx_CHG_MP2721: reg :1  write data:0x13
[   18.428469] xxx_CHG_MP2721: ==mp2721_set_ichg, chg_chr=4080 mA
[   18.434877] xxx_CHG_MP2721: reg :2  read data:0xf3
[   18.438325] <   18.344>TCPC-PE-EVT:src_cap
[   18.438325] <   18.344>TCPC-PE:PD -> SNK_EVA_CAP (CUN)
[   18.438325] <   18.344>TCPC-PE:pd_rev=2
[   18.438325] <   18.344>TCPC-DPM:Policy
[   18.438328] =0x31
[   18.438328] <   18.344>TCPC-DPM:SrcCap1: 0x0901912c
[   18.438328] <   18.344>TCPC-DPM:SrcCap2: 0x0002d0c8
[   18.438328] <   18.344>TCPC-DPM:SrcCap3: 0x0003c096
[   18.438328] <
[   18.442080] xxx_CHG_MP2721: reg :2  write data:0xf3
[   18.447899]   18.344>TCPC-DPM:EvaSinkCap1
[   18.447899] <   18.344>TCPC-DPM:Find SrcCap1(Match):10000 mw
[   18.447899] <   18.344>TCPC-DPM:EvaSinkCap2
[   18.447899] <   18.344>TCPC-D
[   18.447902] PM:Find SrcCap2(Match):18000 mw
[   18.447902] <   18.344>TCPC-DPM:Select SrcCap2
[   18.447902] <   18.344>TCPC-PE-EVT:dpm_ack
[   18.447902] <   18.344>TCPC-PE:PD -> SNK_S
[   18.447906] EL_CAP (CUN)
[   18.447906] <   18.344>TCPC-PE:SelectCap2, rdo:0x230320c8
[   18.447906] <   18.347>TCPC-TCPC:Alert:0x0040, Mask:0x0fff
[   18.447906] <   18.348>TCPC-PE-EVT
[   18.447910] :good_crc
[   18.447910] <   18.352>TCPC-TCPC:Alert:0x0004, Mask:0x0fff
[   18.447910] <   18.353>TCPC-PE-EVT:accept
[   18.447910] <   18.353>TCPC-PE:PD -> SNK_TRANS_SINK (
[   18.447913] CUN)
[   18.447913] <   18.353>TCPC-PE:VC_HIGHV_PROT: 1
[   18.447913] <   18.353>TCPC-PE:pd_set_vconn:0
[   18.447913] <   18.353>TCPC-TCPC:sink_vbus: 9000 mV, 277 mA
[   18.511345] ///PD dbg info 47d
[   18.514392] xxx_CHG_MP2721: reg :5  write data:0x1f
[   18.523965] <   18.511>TCPC-TCPC:Alert:0x0004, Mask:0x0fff
[   18.524034] pd_tcp_notifier_call event = SINK_VBUS
[   18.524073] charger soc:charger: pd_tcp_notifier_call sink vbus 9000mV 2000mA type(0x84)
[   18.524076] pd_tcp_notifier_call - sink vbus
[   18.524200] xxx_CHG: psy_charger_set_property: prop:8 9000000
[   18.524209] xxx_CHG: _wake_up_charger:
[   18.524220] xxx_CHG: psy_charger_get_property psp:122
[   18.524228] xxx_CHG: psy_charger_set_property: prop:144 9000000
[   18.524237] xxx_CHG: psy_charger_set_property: prop:143 9000000
[   18.524245] xxx_CHG: set pd_charging_voltage_max:9000 mv
[   18.524252] xxx_CHG: _wake_up_charger:
[   18.524261] xxx_CHG: psy_charger_set_property: prop:124 2000000
[   18.524268] xxx_CHG: set pd_charging_current_max:2000 ma
[   18.524276] xxx_CHG: _wake_up_charger:
[   18.531799] chg_dump: CHG [online: 1, type: DCP, status: Charging, fault: 0x20, ICHG = 4080mA, AICR = 2000mA, MIVR = 4360mV, IEOC = 240mA, CV = 4375mV]
[   18.564114] ///PD dbg info 120d
[   18.579627] xxx_CHG: charger_routine_thread end , 1
[   18.584521] <   18.523>TCPC-PE-EVT:ps_rdy
[   18.584521] <   18.523>TCPC-TCPC:sink_vbus: 9000 mV, 2000 mA
[   18.584521] <   18.523>TCPC-PE:PD -> SNK_READY (CUN)
```
