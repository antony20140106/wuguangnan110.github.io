From 45e1a0e0192388e9240a024bbaacd4e050c59720 Mon Sep 17 00:00:00 2001
From: zengjf <zengjianfeng@paxsz.com>
Date: Thu, 13 May 2021 14:59:23 +0800
Subject: [PATCH] =?UTF-8?q?[Title]:=20=E9=80=9A=E8=BF=87board=20id?=
 =?UTF-8?q?=E8=87=AA=E5=8A=A8=E9=80=89=E6=8B=A9M50/M8=E5=90=84=E8=87=AAdts?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

[Summary]:
	1. MTK目前架构本身支持DTS Overlay；
	2. board id ID4/ID5 均为0表示M50，其他为M8；
	3. 设备树/chosen/dts_name可以用于在文件系统知道目前加载的是那种DTS，便于确认调试，adb命令：cat /sys/firmware/devicetree/base/chosen/dts_name
		1. M50
		2. M8

[Test Plan]: NO

[Module]: dtbo

[Model]: M50

[author]: zengjianfeng@paxsz.com

[date]: 2021-05-13
---
 .../k62v1_64_pax/ProjectConfig.mk             |   2 +-
 .../arch/arm64/boot/dts/mediatek/M50.dts      | 644 ++++++++++++++++++
 .../dts/mediatek/{k62v1_64_pax.dts => M8.dts} |   1 +
 .../lk/platform/mt6765/custom_dtb_index.c     |  37 +-
 4 files changed, 658 insertions(+), 26 deletions(-)
 create mode 100755 kernel-4.19/arch/arm64/boot/dts/mediatek/M50.dts
 rename kernel-4.19/arch/arm64/boot/dts/mediatek/{k62v1_64_pax.dts => M8.dts} (99%)

diff --git a/device/mediateksample/k62v1_64_pax/ProjectConfig.mk b/device/mediateksample/k62v1_64_pax/ProjectConfig.mk
index 4003272cb91..f891637594b 100755
--- a/device/mediateksample/k62v1_64_pax/ProjectConfig.mk
+++ b/device/mediateksample/k62v1_64_pax/ProjectConfig.mk
@@ -521,7 +521,7 @@ MTK_BT_HEARING_AID_SUPPORT = no
 MTK_CAM_VPU_DSDN = no
 MTK_AI_CAM_SUPPORT = no
 MTK_BIP_UICC_SERVER_MODE = no
-MTK_PROJECT_DTB_NAMES =
+MTK_PROJECT_DTB_NAMES = mediatek/M50 mediatek/M8
 MTK_TINYSYS_SCP_LOGGER_SUPPORT = yes
 MTK_CAM_GESTURE_SUPPORT = no
 MTK_SENSOR_ARCHITECTURE = 1.0
diff --git a/kernel-4.19/arch/arm64/boot/dts/mediatek/M50.dts b/kernel-4.19/arch/arm64/boot/dts/mediatek/M50.dts
new file mode 100755
index 00000000000..797bc307576
--- /dev/null
+++ b/kernel-4.19/arch/arm64/boot/dts/mediatek/M50.dts
@@ -0,0 +1,644 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (c) 2019 MediaTek Inc.
+ *
+ */
+
+#include <dt-bindings/interrupt-controller/arm-gic.h>
+#include <dt-bindings/interrupt-controller/irq.h>
+#include <dt-bindings/pinctrl/mt6765-pinfunc.h>
+#include <dt-bindings/clock/mt6765-clk.h>
+
+/dts-v1/;
+/plugin/;
+
+/* chosen */
+&chosen {
+
+	/* fpga may has no lk, we need to specify display info here */
+	/* fb buffer is reserved using this dts by memory node above */
+	atag,videolfb-fb_base_h = <0x0>;
+	atag,videolfb-fb_base_l = <0x5e605000>;
+	atag,videolfb-islcmfound = <1>;
+	/* because no lk, so lcm is not inited */
+	atag,videolfb-islcm_inited = <0>;
+	atag,videolfb-fps= <6000>;
+	atag,videolfb-vramSize= <0x017bb000>;
+	atag,videolfb-lcmname= "nt35695B_fhd_dsi_cmd_auo_rt5081_drv";
+	dts_name = "M50";
+};
+
+&odm {
+	led0:led@0 {
+		compatible = "mediatek,red";
+		led_mode = <0>;
+		data = <1>;
+		pwm_config = <0 0 0 0 0>;
+	};
+	led1:led@1 {
+		compatible = "mediatek,green";
+		led_mode = <0>;
+		data = <1>;
+		pwm_config = <0 0 0 0 0>;
+	};
+	led2:led@2 {
+		compatible = "mediatek,blue";
+		led_mode = <0>;
+		data = <1>;
+		pwm_config = <0 0 0 0 0>;
+	};
+	led3:led@3 {
+		compatible = "mediatek,jogball-backlight";
+		led_mode = <0>;
+		data = <1>;
+		pwm_config = <0 0 0 0 0>;
+	};
+	led4:led@4 {
+		compatible = "mediatek,keyboard-backlight";
+		led_mode = <0>;
+		data = <1>;
+		pwm_config = <0 0 0 0 0>;
+	};
+	led5:led@5 {
+		compatible = "mediatek,button-backlight";
+		led_mode = <0>;
+		data = <1>;
+		pwm_config = <0 0 0 0 0>;
+	};
+	led6:led@6 {
+		compatible = "mediatek,lcd-backlight";
+		led_mode = <5>;
+		data = <1>;
+		pwm_config = <0 3 0 0 0>;
+	};
+	vibrator0:vibrator@0 {
+		compatible = "mediatek,vibrator";
+		vib_timer = <25>;
+		vib_limit = <9>;
+		vib_vol= <9>;
+	};
+};
+
+&cust_accel_bmi160 {
+		i2c_num					= <1>;
+		i2c_addr				= <0x68 0 0 0>;
+		direction				= <0>;
+		power_id				= <0xffff>;
+		power_vol				= <0>;
+		firlen					= <0>;
+		is_batch_supported			= <0>;
+};
+
+&cust_alsps_stk3x1x_auto {
+		i2c_num				= <1>;
+		i2c_addr				= <0x48 0 0 0>;
+		polling_mode_ps			= <0>;
+		polling_mode_als		= <1>;
+		power_id				= <0xffff>;
+		power_vol				= <0>;
+		als_level	= <5 9 36 59 82 132 205 273 500 845 1136 1545 2364 4655 6982>;
+		als_value	= <0 60 80 115 145 180 222 360 460 550 930 1250 1700 2600 5120 7680 10240>;
+		ps_threshold_high		=  <90>;
+		ps_threshold_low		=  <70>;
+		is_batch_supported_ps	= <0>;
+		is_batch_supported_als	= <0>;
+};
+
+&cust_alsps_ltr559 {
+		i2c_num				= <1>;
+		i2c_addr				= <0x23 0 0 0>;
+		polling_mode_ps			= <0>;
+		polling_mode_als		= <1>;
+		power_id				= <0xffff>;
+		power_vol				= <0>;
+		als_level	= <5 9 36 59 82 132 205 273 500 845 1136 1545 2364 4655 6982>;
+		als_value	= <0 60 80 115 145 180 222 360 460 550 930 1250 1700 2600 5120 7680 10240>;
+		ps_threshold_high		=  <70>;
+		ps_threshold_low		=  <40>;
+		is_batch_supported_ps	= <0>;
+		is_batch_supported_als	= <0>;
+};
+
+&cust_alsps_stk3x3x_auto {
+		i2c_num				= <1>;
+		i2c_addr				= <0x67 0 0 0>;
+		polling_mode_ps			= <0>;
+		polling_mode_als		= <1>;
+		power_id				= <0xffff>;
+		power_vol				= <0>;
+		als_level	= <5   9  36  59  82  132  205  273  500  845  1136  1545  2364  4655  6982>;
+		als_value	= <10  10  40  65  90  145  225  300  550  930  1250  1700  2600  5120  7680  10240> ;
+		ps_threshold_high		=  <90>;
+		ps_threshold_low		=  <70>;
+		is_batch_supported_ps	= <0>;
+		is_batch_supported_als	= <0>;
+};
+
+&cust_alsps_stk3332_auto {
+		i2c_num				        = <1>;
+		i2c_addr				= <0x47 0 0 0>;
+		polling_mode_ps				= <0>;
+		polling_mode_als			= <1>;
+		power_id				= <0xffff>;
+		power_vol				= <0>;
+		als_level				= <5   9  36  59  82  132  205  273  500  845  1136  1545  2364  4655  6982>;
+		als_value				= <10  10  40  65  90  145  225  300  550  930  1250  1700  2600  5120  7680  10240> ;
+		ps_threshold_high			=  <90>;
+		ps_threshold_low			=  <70>;
+		is_batch_supported_ps			= <0>;
+		is_batch_supported_als			= <0>;
+};
+
+&cust_gyro_bmi160 {
+		i2c_num					= <1>;
+		i2c_addr				= <0x69 0 0 0>;
+		direction				= <0>;
+		power_id				= <0xffff>;
+		power_vol				= <0>;
+		firlen					= <0>;
+		is_batch_supported			= <0>;
+};
+
+&cust_mag_mmc5603x {
+		i2c_num					= <1>;
+		i2c_addr				= <0x30 0 0 0>;
+		direction				= <0>;
+		power_id				= <0xffff>;
+		power_vol				= <0>;
+		firlen					= <0>;
+		is_batch_supported			= <0>;
+};
+
+&pio {
+	alsps_intpin_cfg: alspspincfg {
+
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO6__FUNC_GPIO6>;
+			slew-rate = <0>;
+			bias-pull-up = <00>;
+		};
+	};
+
+	alsps_intpin_default: alspsdefaultcfg {
+
+	};
+
+	gyro_intpin_cfg: gyropincfg {
+
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO12__FUNC_GPIO12>;
+			slew-rate = <0>;
+			bias-pull-down = <00>;
+		};
+	};
+
+	gyro_intpin_default: gyrodefaultcfg {
+
+	};
+};
+
+&als {
+	pinctrl-names = "pin_default", "pin_cfg";
+	pinctrl-0 = <&alsps_intpin_default>;
+	pinctrl-1 = <&alsps_intpin_cfg>;
+	status = "okay";
+	interrupt-parent = <&pio>;
+	interrupts = <6 IRQ_TYPE_EDGE_FALLING 6 0>;
+};
+
+&gyro {
+	pinctrl-names = "pin_default", "pin_cfg";
+	pinctrl-0 = <&gyro_intpin_default>;
+	pinctrl-1 = <&gyro_intpin_cfg>;
+	status = "okay";
+	interrupt-parent = <&pio>;
+	interrupts = <12 IRQ_TYPE_EDGE_FALLING 12 0>;
+};
+
+&i2c1 {
+/*  start sensor */
+
+	gsensor_bmi160@68 {
+		compatible = "mediatek,gsensor_bmi160";
+		reg = <0x68>;
+		status = "okay";
+	};
+
+	alsps_stk3332_auto@47 {
+		compatible = "mediatek,alsps_stk3332_auto";
+		reg = <0x47>;
+		status = "okay";
+	};
+
+	alsps_ltr559@23 {
+		compatible = "mediatek,alsps_ltr559";
+		reg = <0x23>;
+		status = "okay";
+	};
+
+	alsps_stk3x1x_auto@48 {
+		compatible = "mediatek,alsps_stk3x1x_auto";
+		reg = <0x48>;
+		status = "okay";
+	};
+
+	alsps_stk3x3x_auto@67 {
+		compatible = "mediatek,alsps_stk3x3x_auto";
+		reg = <0x67>;
+		status = "okay";
+	};
+
+	gyro_bmi160@69 {
+		compatible = "mediatek,gyro_bmi160";
+		reg = <0x69>;
+		status = "okay";
+	};
+
+	mag_mmc5603x@30 {
+		compatible = "mediatek,mag_mmc5603x";
+		reg = <0x30>;
+		status = "okay";
+	};
+
+/* end sensor */
+};
+
+&i2c3 {
+	ext_buck_lp4@57 {
+		regulator-name ="ext_buck_vdd2";
+		regulator-min-microvolt = <300000>;
+		regulator-max-microvolt = <1300000>;
+		vsel_pin = <0>;
+	};
+
+	ext_buck_lp4x@50 {
+		regulator-name ="ext_buck_vddq";
+		regulator-min-microvolt = <300000>;
+		regulator-max-microvolt = <1300000>;
+		vsel_pin = <1>;
+	};
+};
+
+&i2c6 {
+	ext_buck_vgpu@55 {
+		regulator-name ="ext_buck_vgpu";
+		regulator-min-microvolt = <300000>;
+		regulator-max-microvolt = <1300000>;
+		vsel_pin = <2>;
+	};
+};
+
+/* CONSYS GPIO standardization */
+&pio {
+	consys_pins_default: consys_default {
+	};
+	gpslna_pins_init: gpslna@0 {
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO150__FUNC_GPIO150>;
+			slew-rate = <0>;
+			bias-disable;
+			output-low;
+		};
+	};
+	gpslna_pins_oh: gpslna@1 {
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO150__FUNC_GPIO150>;
+			slew-rate = <1>;
+			output-high;
+		};
+	};
+	gpslna_pins_ol: gpslna@2 {
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO150__FUNC_GPIO150>;
+			slew-rate = <1>;
+			output-low;
+		};
+	};
+};
+&consys {
+	pinctrl-names = "default", "gps_lna_state_init",
+		"gps_lna_state_oh", "gps_lna_state_ol";
+	pinctrl-0 = <&consys_pins_default>;
+	pinctrl-1 = <&gpslna_pins_init>;
+	pinctrl-2 = <&gpslna_pins_oh>;
+	pinctrl-3 = <&gpslna_pins_ol>;
+	status = "okay";
+};
+/* CONSYS end */
+
+&keypad {
+	pinctrl-names = "default";
+	pinctrl-0 = <&kpd_pins_default>;
+};
+
+&pio {
+	kpd_pins_default: kpdgpiodefault {
+		pins_cmd0_dat {
+			pinmux = <PINMUX_GPIO93__FUNC_KPCOL0>;
+			bias-pull-up = <MTK_PUPD_SET_R1R0_10>;
+			output-low;
+			input-schmitt-enable;
+		};
+		pins_cmd1_dat {
+			pinmux = <PINMUX_GPIO94__FUNC_KPCOL1>;
+			bias-pull-up = <MTK_PUPD_SET_R1R0_10>;
+			output-low;
+			input-schmitt-enable;
+		};
+	};
+};
+
+
+/* accdet start */
+&accdet {
+	accdet-mic-vol = <7>;
+	headset-mode-setting = <0x500 0x500 1 0x1f0 0x800 0x800 0x20 0x44>;
+	accdet-plugout-debounce = <1>;
+	accdet-mic-mode = <1>;
+	headset-eint-level-pol = <8>;
+	headset-three-key-threshold = <0 80 220 400>;
+	headset-three-key-threshold-CDD = <0 121 192 600>;
+	headset-four-key-threshold = <0 58 121 192 400>;
+	pinctrl-names = "default", "state_eint_as_int";
+	pinctrl-0 = <&accdet_pins_default>;
+	pinctrl-1 = <&accdet_pins_eint_as_int>;
+	status = "okay";
+};
+&pio {
+	accdet_pins_default: accdetdefault {
+	};
+	accdet_pins_eint_as_int: accdeteint@0 {
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO8__FUNC_GPIO8>;
+			slew-rate = <0>;
+			bias-disable;
+		};
+	};
+};
+/* accdet end */
+
+/* FINGERPRINT start */
+&spi0 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	fingerprint@0 {
+		compatible = "goodix,goodix-fp";
+		reg = <0>;
+		spi-max-frequency = <8000000>;
+		netlink-event = <30>;
+		status = "disabled";
+	};
+};
+
+&goodix_fp {
+	pinctrl-names = "default", "reset_high", "reset_low";
+	pinctrl-0 = <&fingerprint_default>;
+	pinctrl-1 = <&fingerprint_reset_high>;
+	pinctrl-2 = <&fingerprint_reset_low>;
+	status = "disabled";
+};
+
+&pio {
+	fingerprint_default: state_default {
+	};
+	fingerprint_reset_high: state_reset_high {
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO172__FUNC_GPIO172>;
+			slew-rate = <1>;
+			output-high;
+		};
+	};
+	fingerprint_reset_low: state_reset_low {
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO172__FUNC_GPIO172>;
+			slew-rate = <1>;
+			output-low;
+		};
+	};
+};
+/* FINGERPRINT end */
+
+/* IRTX GPIO end */
+&irtx_pwm {
+	pinctrl-names = "irtx_gpio_led_default", "irtx_gpio_led_set";
+	pinctrl-0 = <&irtx_gpio_led_default>;
+	pinctrl-1 = <&irtx_gpio_led_set>;
+	status = "okay";
+};
+&pio {
+	irtx_gpio_led_default:irtx_gpio_led_def@gpio90 {
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO90__FUNC_GPIO90>;
+			slew-rate = <1>;
+			bias-disable;
+			output-low;
+			input-schmitt-enable = <0>;
+		};
+	};
+
+	irtx_gpio_led_set:irtx_gpio_led_set@gpio90 {
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO90__FUNC_PWM0>;
+			slew-rate = <1>;
+			output-high;
+		};
+	};
+};
+/* IRTX GPIO Settings -End */
+
+/* AUDIO GPIO standardization */
+&audgpio {
+	pinctrl-names = "aud_clk_mosi_off",
+			"aud_clk_mosi_on",
+			"aud_clk_miso_off",
+			"aud_clk_miso_on",
+			"aud_dat_mosi_off",
+			"aud_dat_mosi_on",
+			"aud_dat_miso_off",
+			"aud_dat_miso_on",
+			"extamp-pullhigh",
+			"extamp-pulllow";
+	pinctrl-0 = <&aud_clk_mosi_off>;
+	pinctrl-1 = <&aud_clk_mosi_on>;
+	pinctrl-2 = <&aud_clk_miso_off>;
+	pinctrl-3 = <&aud_clk_miso_on>;
+	pinctrl-4 = <&aud_dat_mosi_off>;
+	pinctrl-5 = <&aud_dat_mosi_on>;
+	pinctrl-6 = <&aud_dat_miso_off>;
+	pinctrl-7 = <&aud_dat_miso_on>;
+	pinctrl-8 = <&aud_pins_extamp_high>;
+	pinctrl-9 = <&aud_pins_extamp_low>;
+	status = "okay";
+};
+
+&pio {
+	aud_clk_mosi_off: aud_clk_mosi_off {
+		pins_cmd0_dat {
+			pinmux = <PINMUX_GPIO136__FUNC_GPIO136>;
+		};
+	};
+
+	aud_clk_mosi_on: aud_clk_mosi_on {
+		pins_cmd0_dat {
+			pinmux = <PINMUX_GPIO136__FUNC_AUD_CLK_MOSI>;
+		};
+	};
+
+	aud_clk_miso_off: aud_clk_miso_off {
+		pins_cmd0_dat {
+			pinmux = <PINMUX_GPIO140__FUNC_GPIO140>;
+		};
+	};
+
+	aud_clk_miso_on: aud_clk_miso_on {
+		pins_cmd0_dat {
+			pinmux = <PINMUX_GPIO140__FUNC_AUD_CLK_MISO>;
+		};
+	};
+
+	aud_dat_mosi_off: aud_dat_mosi_off {
+		pins_cmd1_dat {
+			pinmux = <PINMUX_GPIO138__FUNC_GPIO138>;
+			input-enable;
+			slew-rate = <0>;
+			bias-disable;
+		};
+		pins_cmd2_dat {
+			pinmux = <PINMUX_GPIO139__FUNC_GPIO139>;
+			input-enable;
+			slew-rate = <0>;
+			bias-disable;
+		};
+	};
+
+	aud_dat_mosi_on: aud_dat_mosi_on {
+		pins_cmd1_dat {
+			pinmux = <PINMUX_GPIO138__FUNC_AUD_DAT_MOSI0>;
+		};
+		pins_cmd2_dat {
+			pinmux = <PINMUX_GPIO139__FUNC_AUD_DAT_MOSI1>;
+		};
+	};
+
+	aud_dat_miso_off: aud_dat_miso_off {
+		pins_cmd1_dat {
+			pinmux = <PINMUX_GPIO142__FUNC_GPIO142>;
+			input-enable;
+			slew-rate = <0>;
+			bias-disable;
+		};
+		pins_cmd2_dat {
+			pinmux = <PINMUX_GPIO143__FUNC_GPIO143>;
+			input-enable;
+			slew-rate = <0>;
+			bias-disable;
+		};
+	};
+
+	aud_dat_miso_on: aud_dat_miso_on {
+		pins_cmd1_dat {
+			pinmux = <PINMUX_GPIO142__FUNC_AUD_DAT_MISO0>;
+		};
+		pins_cmd2_dat {
+			pinmux = <PINMUX_GPIO143__FUNC_AUD_DAT_MISO1>;
+		};
+	};
+
+	aud_pins_extamp_high: audexamphigh {
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO153__FUNC_GPIO153>;
+			slew-rate = <1>;
+			output-high;
+		};
+	};
+
+	aud_pins_extamp_low: audexamplow {
+		pins_cmd_dat {
+			pinmux = <PINMUX_GPIO153__FUNC_GPIO153>;
+			slew-rate = <1>;
+			output-low;
+		};
+	};
+};
+/* AUDIO end */
+
+&mt6370_pmu {
+	mt6370,intr_gpio_num = <11>; /* direct defined GPIO num */
+	mt6370,intr_gpio = <&pio 11 0x0>;
+};
+
+&mt6370_typec {
+	mt6370pd,intr_gpio_num = <9>; /* direct defined GPIO num */
+	mt6370pd,intr_gpio = <&pio 9 0x0>;
+};
+
+&mt6370_chg {
+	bc12_sel = <1>;
+};
+
+&i2c3 {
+	rt9465@4b {
+		compatible = "richtek,rt9465";
+		reg = <0x4b>;
+		status = "disabled";
+		rt,en_gpio_num = <176>;
+		rt,en_gpio = <&pio 176 0x0>;
+		rt,intr_gpio_num = <23>; /* direct defined GPIO num */
+		rt,intr_gpio = <&pio 23 0x0>;
+		interrupt-names = "wdtmri";
+		charger_name = "secondary_chg";
+		ichg = <1500000>; /* uA */
+		mivr = <4500000>; /* uV */
+		cv = <4550000>; /* uV */
+		ieoc = <700000>; /* uA */
+		safety_timer = <12>; /* hour */
+		en_st; /* safety timer */
+		/* en_te; */
+		en_wdt;
+	};
+};
+
+&charger {
+	charger_configuration= <0>;
+};
+
+&pe2 {
+	dcs_chg1_charger_current = <2000000>;
+	dcs_chg2_charger_current = <2000000>;
+};
+
+&pdc {
+	pd_vbus_upper_bound = <9000000>;
+	dcs_chg1_charger_current = <2000000>;
+	dcs_chg2_charger_current = <2000000>;
+};
+
+&pe4 {
+	dcs_chg1_charger_current = <2000000>;
+	dcs_chg2_charger_current = <2000000>;
+};
+
+&pax_gpios {
+	status = "okay";
+	gpio_num = <8>;
+	gpio_in_num = <4>;
+	gpio_input_index_array = <0 2 3 4>;
+	gpio_output_index_array = <1 5 6 7>;
+	gpio_output_default = <0 0 0 0>;  /* output default value */
+	gpio_eint_num = <0>;
+	gpio_eint_index_array = <0xff>; /* 0xff: invalid */
+
+	gpio0_in = <&pio 172 0x0>;
+	gpio1_out = <&pio 173 0x0>;
+	gpio2_in = <&pio 175 0x0>;
+	gpio3_in = <&pio 176 0x0>;
+	gpio4_in = <&pio 177 0x0>;
+	gpio5_out = <&pio 163 0x0>;
+	gpio6_out = <&pio 164 0x0>;
+	gpio7_out = <&pio 171 0x0>;
+};
+
+#include "k62v1_64_pax/cust.dtsi"
+#include "mediatek/cust_mt6765_camera.dtsi"
+#include "mediatek/cust_mt6765_touch_720x1440.dtsi"
+/*End of this file, DO NOT ADD ANYTHING HERE*/
diff --git a/kernel-4.19/arch/arm64/boot/dts/mediatek/k62v1_64_pax.dts b/kernel-4.19/arch/arm64/boot/dts/mediatek/M8.dts
similarity index 99%
rename from kernel-4.19/arch/arm64/boot/dts/mediatek/k62v1_64_pax.dts
rename to kernel-4.19/arch/arm64/boot/dts/mediatek/M8.dts
index f8998f8a8ed..dcb93d306bc 100755
--- a/kernel-4.19/arch/arm64/boot/dts/mediatek/k62v1_64_pax.dts
+++ b/kernel-4.19/arch/arm64/boot/dts/mediatek/M8.dts
@@ -25,6 +25,7 @@
 	atag,videolfb-fps= <6000>;
 	atag,videolfb-vramSize= <0x017bb000>;
 	atag,videolfb-lcmname= "nt35695B_fhd_dsi_cmd_auo_rt5081_drv";
+	dts_name = "M8";
 };
 
 &odm {
diff --git a/vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6765/custom_dtb_index.c b/vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6765/custom_dtb_index.c
index c77ca76b828..5a97893069d 100644
--- a/vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6765/custom_dtb_index.c
+++ b/vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6765/custom_dtb_index.c
@@ -41,11 +41,11 @@
 /******************************************************************************
 * NOTE: This function is for the internal projects of MT6771.
 *        -----------------------------------------
-*       | GPIO_163    GPIO_164    PCB_ID          |
-*       |   Low          Low      SEVB  (MTK0963) |
-*       |   Low          High     Phone (MTK0891) |
-*       |   High         Low      TBD             |
-*       |   High         High     TBD             |
+*       |   ID4          ID5      PCB_ID          |
+*       |   Low          Low      M50             |
+*       |   Low          High     M8              |
+*       |   High         Low      M8              |
+*       |   High         High     M8              |
 *        -----------------------------------------
 *
 *       Customers need to implement their own customized_get_odm_mdtbo_index()
@@ -54,28 +54,15 @@
 int customized_get_odm_mdtbo_index(void)
 {
 	int idx = 0;
-	S32 pin163 = mt_get_gpio_in(GPIO_163);
-	S32 pin164 = mt_get_gpio_in(GPIO_164);
+	int board_id = getBoardIDVals();
 
-	dprintf(INFO, "pin163 = %d, pin164 = %d\n", pin163, pin164);
+	/*[FEATURE]-Add-BEGIN by zengjianfeng@paxsz.com, 2021/05/13, for multi dts */
+	dprintf(INFO, "get board id vals: 0x%02x\n", board_id);
 
-	if (pin163 == GPIO_HIGH) {
-		if (pin164 == GPIO_HIGH) {
-			// idx = 3;
-			dprintf(INFO, "Error: PCB_ID: Unknown, dtb idx = %d\n", idx);
-		} else {
-			idx = 2;
-			dprintf(INFO, "Error: PCB_ID: Unknown, dtb idx = %d\n", idx);
-		}
-	} else {
-		if (pin164 == GPIO_HIGH) {
-			idx = 1;
-			dprintf(INFO, "PCB_ID: Phone (MTK0891), dtb idx = %d\n", idx);
-		} else {
-			idx = 0;
-			dprintf(INFO, "PCB_ID: SEVB (MTK0963), dtb idx = %d\n", idx);
-		}
-	}
+	if ((board_id & (0x03 << 3)) > 0)
+		idx = 1;
+	dprintf(INFO, "dtb index: 0x%02x\n", idx);
+	/*[FEATURE]-Add-END by zengjianfeng@paxsz.com, 2021/05/13, for multi dts */
 
 	return idx;
 }
-- 
2.17.1

