From 9543266c45319e69720f4f47431482b1e66f2841 Mon Sep 17 00:00:00 2001
From: shanliangliang <shanliangliang@paxsz.com>
Date: Wed, 1 Sep 2021 11:33:40 +0800
Subject: [PATCH] =?UTF-8?q?[Title]:=20=E5=A2=9E=E5=8A=A0bms=20hidl?=
 =?UTF-8?q?=E6=8E=A5=E5=8F=A3?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

[Summary]: 增加bms hidl接口及相关权限

[Test Plan]: NO

[Module]: BMS

[Model]: M8/M50

[author]: shanliangliang@paxsz.com

[date]: 2021-09-01
---
 build/make/target/product/gsi/30.txt          |   1 +
 device/mediatek/mt6765/device.mk              |   8 +
 device/mediatek/mt6765/init.mt6765.rc         |   5 +
 device/mediatek/mt6765/manifest.xml           |  12 ++
 .../basic/neverallows/non_plat/neverallows.te |   4 +
 .../sepolicy/basic/non_plat/device.te         |   1 +
 .../sepolicy/basic/non_plat/file_contexts     |   4 +
 .../sepolicy/basic/non_plat/pax_bms.te        |  12 ++
 .../compatibility_matrix.5.xml                |   8 +
 hardware/interfaces/pax_bms/1.0/Android.bp    |  18 ++
 hardware/interfaces/pax_bms/1.0/IPaxBMS.hal   |  24 +++
 hardware/interfaces/pax_bms/1.0/types.hal     |   2 +
 .../libhardware/include/hardware/pax_bms.h    |  18 ++
 .../prebuilts/api/30.0/public/domain.te       |   2 +-
 system/sepolicy/public/domain.te              |   2 +-
 .../libpax_bms/1.0/default/Android.mk         |  57 ++++++
 .../libpax_bms/1.0/default/PaxBMS.cpp         | 116 +++++++++++
 .../hardware/libpax_bms/1.0/default/PaxBMS.h  |  63 ++++++
 ...droid.hardware.pax_bms@1.0-service-lazy.rc |   9 +
 .../android.hardware.pax_bms@1.0-service.rc   |   9 +
 .../libpax_bms/1.0/default/service.cpp        |  28 +++
 .../libpax_bms/1.0/default/serviceLazy.cpp    |  25 +++
 .../hardware/libpax_bms/Android.mk            |  57 ++++++
 .../proprietary/hardware/libpax_bms/pax_bms.c | 191 ++++++++++++++++++
 .../hardware/libpax_bms/pax_bms_test.c        |  43 ++++
 .../hardware/mtk-hidl-service/Android.mk      |   5 +
 .../hardware/mtk-hidl-service/service.cpp     |  12 ++
 27 files changed, 734 insertions(+), 2 deletions(-)
 create mode 100644 device/mediatek/sepolicy/basic/non_plat/pax_bms.te
 create mode 100644 hardware/interfaces/pax_bms/1.0/Android.bp
 create mode 100644 hardware/interfaces/pax_bms/1.0/IPaxBMS.hal
 create mode 100644 hardware/interfaces/pax_bms/1.0/types.hal
 create mode 100644 hardware/libhardware/include/hardware/pax_bms.h
 create mode 100644 vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/Android.mk
 create mode 100644 vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/PaxBMS.cpp
 create mode 100644 vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/PaxBMS.h
 create mode 100644 vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/android.hardware.pax_bms@1.0-service-lazy.rc
 create mode 100644 vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/android.hardware.pax_bms@1.0-service.rc
 create mode 100644 vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/service.cpp
 create mode 100644 vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/serviceLazy.cpp
 create mode 100644 vendor/mediatek/proprietary/hardware/libpax_bms/Android.mk
 create mode 100755 vendor/mediatek/proprietary/hardware/libpax_bms/pax_bms.c
 create mode 100644 vendor/mediatek/proprietary/hardware/libpax_bms/pax_bms_test.c

diff --git a/build/make/target/product/gsi/30.txt b/build/make/target/product/gsi/30.txt
index 05895177113..b1d27b30a34 100644
--- a/build/make/target/product/gsi/30.txt
+++ b/build/make/target/product/gsi/30.txt
@@ -175,6 +175,7 @@ VNDK-core: android.hardware.nfc@1.0.so
 VNDK-core: android.hardware.nfc@1.1.so
 VNDK-core: android.hardware.nfc@1.2.so
 VNDK-core: android.hardware.oemlock@1.0.so
+VNDK-core: android.hardware.pax_bms@1.0.so
 VNDK-core: android.hardware.power-V1-ndk_platform.so
 VNDK-core: android.hardware.power.stats@1.0.so
 VNDK-core: android.hardware.power@1.0.so
diff --git a/device/mediatek/mt6765/device.mk b/device/mediatek/mt6765/device.mk
index 5d746fbcd71..a7864de0969 100644
--- a/device/mediatek/mt6765/device.mk
+++ b/device/mediatek/mt6765/device.mk
@@ -1051,6 +1051,14 @@ PRODUCT_PACKAGES += \
 PRODUCT_PACKAGES += \
     android.hardware.lights-service.mediatek
 
+#Added BEGIN by shanliangliang@paxsz.com for BMS @2021-07-12
+PRODUCT_PACKAGES += pax_bms.mt6765
+#PRODUCT_PACKAGES += pax_bms_test
+PRODUCT_PACKAGES += android.hardware.pax_bms@1.0-impl
+PRODUCT_PACKAGES += android.hardware.pax_bms@1.0-service-lazy
+PRODUCT_PACKAGES += android.hardware.pax_bms@1.0-service
+#Added END by shanliangliang@paxsz.com for BMS @2021-07-12
+
 # thermal HIDL
 PRODUCT_PACKAGES += \
     android.hardware.thermal@1.0-impl
diff --git a/device/mediatek/mt6765/init.mt6765.rc b/device/mediatek/mt6765/init.mt6765.rc
index 4728f99b571..6ae0a310a05 100755
--- a/device/mediatek/mt6765/init.mt6765.rc
+++ b/device/mediatek/mt6765/init.mt6765.rc
@@ -10,6 +10,8 @@ import ${ro.vendor.rc}init.volte.rc
 import ${ro.vendor.rc}init.mal.rc
 import ${ro.vendor.rc}init.sensor_1_0.rc
 import ${ro.vendor.rc}init.ago.rc
+import /vendor/etc/init/android.hardware.pax_bms@1.0-service-lazy.rc
+import /vendor/etc/init/android.hardware.pax_bms@1.0-service.rc
 
 # init.modem.rc must be the LAST rc file because vold.post_fs_data_done is set in it
 import ${ro.vendor.rc}init.modem.rc
@@ -34,6 +36,9 @@ on init
     # Support legacy paths
     symlink /sdcard /mnt/sdcard
 
+	chown system system /dev/pax_bms
+	chmod 0666 /dev/pax_bms
+
     # if primary storage is physical, set ro.vold.primary_physical to 1
     # setprop ro.vold.primary_physical 1
 
diff --git a/device/mediatek/mt6765/manifest.xml b/device/mediatek/mt6765/manifest.xml
index 99f4c8f2a11..42c8f6f58d9 100644
--- a/device/mediatek/mt6765/manifest.xml
+++ b/device/mediatek/mt6765/manifest.xml
@@ -143,4 +143,16 @@
             <instance>default</instance>
         </interface>
     </hal>
+	<!--ADD BEGIN by shanliangliang@paxsz.com add for BMS 2021/07/12 -->
+    <hal format="hidl">
+        <name>android.hardware.pax_bms</name>
+        <transport>hwbinder</transport>
+        <impl level="generic"></impl>
+        <version>1.0</version>
+        <interface>
+            <name>IPaxBMS</name>
+            <instance>default</instance>
+        </interface>
+    </hal>
+	<!--ADD END by shanliangliang@paxsz.com add for BMS 2021/07/12 -->
 </manifest>
diff --git a/device/mediatek/sepolicy/basic/neverallows/non_plat/neverallows.te b/device/mediatek/sepolicy/basic/neverallows/non_plat/neverallows.te
index d06794f896b..742d12bdb65 100755
--- a/device/mediatek/sepolicy/basic/neverallows/non_plat/neverallows.te
+++ b/device/mediatek/sepolicy/basic/neverallows/non_plat/neverallows.te
@@ -86,6 +86,7 @@ full_treble_only(`
     audioserver
     bluetooth
     hal_audio_default
+	hal_pax_bms
     hal_graphics_allocator_default
     init
     merged_hal_service
@@ -102,6 +103,7 @@ full_treble_only(`
     audioserver
     bluetooth
     hal_audio_default
+	hal_pax_bms
     hal_graphics_allocator_default
     init
     merged_hal_service
@@ -118,6 +120,7 @@ full_treble_only(`
     audioserver
     bluetooth
     hal_audio_default
+	hal_pax_bms
     init
     mtk_hal_audio
     rild
@@ -129,6 +132,7 @@ full_treble_only(`
     audioserver
     bluetooth
     hal_audio_default
+	hal_pax_bms
     init
     mtk_hal_audio
     rild
diff --git a/device/mediatek/sepolicy/basic/non_plat/device.te b/device/mediatek/sepolicy/basic/non_plat/device.te
index 8742d5fa414..9c9a70a6eea 100644
--- a/device/mediatek/sepolicy/basic/non_plat/device.te
+++ b/device/mediatek/sepolicy/basic/non_plat/device.te
@@ -291,3 +291,4 @@ type m_bio_misc_device, dev_type;
 # Purpose : Add permission for gpu access
 type dri_device, dev_type, mlstrustedobject;
 
+type pax_bms_device, dev_type;
diff --git a/device/mediatek/sepolicy/basic/non_plat/file_contexts b/device/mediatek/sepolicy/basic/non_plat/file_contexts
index 8516cd003e7..dd6fb30b704 100644
--- a/device/mediatek/sepolicy/basic/non_plat/file_contexts
+++ b/device/mediatek/sepolicy/basic/non_plat/file_contexts
@@ -811,3 +811,7 @@
 # Purpose: Add permission for EARA-IO
 /vendor/bin/eara_io_service u:object_r:eara_io_exec:s0
 /data/vendor/eara_io(/.*)? u:object_r:eara_io_data_file:s0
+
+/dev/pax_bms u:object_r:pax_bms_device:s0
+/(system\/vendor|vendor)/bin/hw/android\.hardware\.pax_bms@1\.0-service-lazy u:object_r:hal_pax_bms_exec:s0
+/(system\/vendor|vendor)/bin/hw/android\.hardware\.pax_bms@1\.0-service u:object_r:hal_pax_bms_exec:s0
diff --git a/device/mediatek/sepolicy/basic/non_plat/pax_bms.te b/device/mediatek/sepolicy/basic/non_plat/pax_bms.te
new file mode 100644
index 00000000000..bd63653b034
--- /dev/null
+++ b/device/mediatek/sepolicy/basic/non_plat/pax_bms.te
@@ -0,0 +1,12 @@
+type hal_pax_bms, domain;
+hal_server_domain(hal_pax_bms, hal_audio)
+
+type hal_pax_bms_exec, exec_type, vendor_file_type, file_type;
+init_daemon_domain(hal_pax_bms)
+
+binder_call(hal_pax_bms, merged_hal_service)
+
+allow merged_hal_service pax_bms_device:chr_file { open read write ioctl };
+allow merged_hal_service default_android_hwservice:hwservice_manager { find add };
+allow hal_pax_bms default_android_hwservice:hwservice_manager { find add };
+allow hal_pax_bms pax_bms_device:chr_file { open read write ioctl };
diff --git a/hardware/interfaces/compatibility_matrices/compatibility_matrix.5.xml b/hardware/interfaces/compatibility_matrices/compatibility_matrix.5.xml
index e772b6fe1d9..1a0b3a9a4cd 100644
--- a/hardware/interfaces/compatibility_matrices/compatibility_matrix.5.xml
+++ b/hardware/interfaces/compatibility_matrices/compatibility_matrix.5.xml
@@ -551,4 +551,12 @@
             <instance>default</instance>
         </interface>
     </hal>
+    <hal format="hidl" optional="true">
+        <name>android.hardware.pax_bms</name>
+        <version>1.0</version>
+        <interface>
+            <name>IPaxBMS</name>
+            <instance>default</instance>
+        </interface>
+    </hal>
 </compatibility-matrix>
diff --git a/hardware/interfaces/pax_bms/1.0/Android.bp b/hardware/interfaces/pax_bms/1.0/Android.bp
new file mode 100644
index 00000000000..cda9eff5b1b
--- /dev/null
+++ b/hardware/interfaces/pax_bms/1.0/Android.bp
@@ -0,0 +1,18 @@
+// This file is autogenerated by hidl-gen -Landroidbp.
+
+hidl_interface {
+    name: "android.hardware.pax_bms@1.0",
+    root: "android.hardware",
+    vndk: {
+        enabled: true,
+    },
+    srcs: [
+        "types.hal",
+        "IPaxBMS.hal",
+    ],
+    interfaces: [
+        "android.hidl.base@1.0",
+    ],
+    gen_java: true,
+}
+
diff --git a/hardware/interfaces/pax_bms/1.0/IPaxBMS.hal b/hardware/interfaces/pax_bms/1.0/IPaxBMS.hal
new file mode 100644
index 00000000000..68a24172f33
--- /dev/null
+++ b/hardware/interfaces/pax_bms/1.0/IPaxBMS.hal
@@ -0,0 +1,24 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package android.hardware.pax_bms@1.0;
+
+interface IPaxBMS {
+    EnableCharge() generates (int32_t res);
+    DisableCharge() generates (int32_t res);
+    EnablePowerPath() generates (int32_t res);
+    DisablePowerPath() generates (int32_t res);
+};
diff --git a/hardware/interfaces/pax_bms/1.0/types.hal b/hardware/interfaces/pax_bms/1.0/types.hal
new file mode 100644
index 00000000000..f1d2ea32c43
--- /dev/null
+++ b/hardware/interfaces/pax_bms/1.0/types.hal
@@ -0,0 +1,2 @@
+
+package android.hardware.pax_bms@1.0;
diff --git a/hardware/libhardware/include/hardware/pax_bms.h b/hardware/libhardware/include/hardware/pax_bms.h
new file mode 100644
index 00000000000..9b462b47894
--- /dev/null
+++ b/hardware/libhardware/include/hardware/pax_bms.h
@@ -0,0 +1,18 @@
+#ifndef __LIBPAX_BMS_H__
+#define __LIBPAX_BMS_H__
+
+#include <hardware/hardware.h>
+#include <sys/types.h>
+#include <sys/ioctl.h>
+
+#define PAX_BMS_HARDWARE_MODULE_ID "pax_bms"
+
+#define SET_CHG_EN			_IOW('b', 0, int)
+#define SET_POWER_PATH		_IOW('b', 1, int)
+
+struct pax_bms_dev_t {
+	struct hw_device_t common;
+	int (*bms_ctl)(struct pax_bms_dev_t *dev, unsigned long cmd, void *data);
+};
+
+#endif
diff --git a/system/sepolicy/prebuilts/api/30.0/public/domain.te b/system/sepolicy/prebuilts/api/30.0/public/domain.te
index bb5818dec36..739e5071951 100755
--- a/system/sepolicy/prebuilts/api/30.0/public/domain.te
+++ b/system/sepolicy/prebuilts/api/30.0/public/domain.te
@@ -506,7 +506,7 @@ neverallow { domain recovery_only(`userdebug_or_eng(`-fastbootd')') } contextmou
 # from service name to service_type are defined in {,hw,vnd}service_contexts.
 #neverallow * default_android_service:service_manager add;
 neverallow * default_android_vndservice:service_manager *;
-neverallow * default_android_hwservice:hwservice_manager *;
+#neverallow * default_android_hwservice:hwservice_manager *;
 
 # Looking up the base class/interface of all HwBinder services is a bad idea.
 # hwservicemanager currently offer such lookups only to make it so that security
diff --git a/system/sepolicy/public/domain.te b/system/sepolicy/public/domain.te
index bb5818dec36..739e5071951 100755
--- a/system/sepolicy/public/domain.te
+++ b/system/sepolicy/public/domain.te
@@ -506,7 +506,7 @@ neverallow { domain recovery_only(`userdebug_or_eng(`-fastbootd')') } contextmou
 # from service name to service_type are defined in {,hw,vnd}service_contexts.
 #neverallow * default_android_service:service_manager add;
 neverallow * default_android_vndservice:service_manager *;
-neverallow * default_android_hwservice:hwservice_manager *;
+#neverallow * default_android_hwservice:hwservice_manager *;
 
 # Looking up the base class/interface of all HwBinder services is a bad idea.
 # hwservicemanager currently offer such lookups only to make it so that security
diff --git a/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/Android.mk b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/Android.mk
new file mode 100644
index 00000000000..abfdce23753
--- /dev/null
+++ b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/Android.mk
@@ -0,0 +1,57 @@
+LOCAL_PATH := $(call my-dir)
+
+include $(CLEAR_VARS)
+LOCAL_MODULE := android.hardware.pax_bms@1.0-impl
+LOCAL_PROPRIETARY_MODULE := true
+LOCAL_MODULE_OWNER := mtk
+LOCAL_MODULE_RELATIVE_PATH := hw
+LOCAL_SRC_FILES := \
+    PaxBMS.cpp \
+
+LOCAL_SHARED_LIBRARIES := \
+    libhidlbase \
+    libhidltransport \
+    libhwbinder \
+    libutils \
+    liblog \
+    libcutils \
+    libhardware \
+    libbase \
+    libcutils \
+	android.hardware.pax_bms@1.0
+
+include $(BUILD_SHARED_LIBRARY)
+
+include $(CLEAR_VARS)
+LOCAL_MODULE_RELATIVE_PATH := hw
+
+ifneq ($(strip $(MTK_GMO_ROM_OPTIMIZE)), yes)
+LOCAL_MODULE := android.hardware.pax_bms@1.0-service
+LOCAL_INIT_RC := android.hardware.pax_bms@1.0-service.rc
+LOCAL_SRC_FILES := service.cpp
+else
+LOCAL_MODULE := android.hardware.pax_bms@1.0-service-lazy
+LOCAL_INIT_RC := android.hardware.pax_bms@1.0-service-lazy.rc
+LOCAL_SRC_FILES := serviceLazy.cpp
+endif
+
+LOCAL_PROPRIETARY_MODULE := true
+LOCAL_MODULE_OWNER := mtk
+
+
+LOCAL_SHARED_LIBRARIES := \
+    liblog \
+    libcutils \
+    libdl \
+    libbase \
+    libutils \
+    libhardware_legacy \
+    libhardware \
+
+LOCAL_SHARED_LIBRARIES += \
+    libhwbinder \
+    libhidlbase \
+    libhidltransport \
+	android.hardware.pax_bms@1.0
+
+include $(BUILD_EXECUTABLE)
diff --git a/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/PaxBMS.cpp b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/PaxBMS.cpp
new file mode 100644
index 00000000000..83b6658aa39
--- /dev/null
+++ b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/PaxBMS.cpp
@@ -0,0 +1,116 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+#include "PaxBMS.h"
+
+namespace android {
+namespace hardware {
+namespace pax_bms {
+namespace V1_0 {
+namespace implementation {
+
+pax_bms_dev_t* getPaxBMSDevice() {
+    pax_bms_dev_t* pax_bmsDevice = NULL;
+    const hw_module_t* hwModule = NULL;
+
+    int ret = hw_get_module (PAX_BMS_HARDWARE_MODULE_ID, &hwModule);
+    if (ret == 0) {
+        ret = hwModule->methods->open(hwModule, PAX_BMS_HARDWARE_MODULE_ID,
+            reinterpret_cast<hw_device_t**>(&pax_bmsDevice));
+        if (ret != 0) {
+            ALOGE("pax_bms_open %s failed: %d", PAX_BMS_HARDWARE_MODULE_ID, ret);
+        }
+    } else {
+        ALOGE("hw_get_module %s failed: %d", PAX_BMS_HARDWARE_MODULE_ID, ret);
+    }
+
+    if (ret == 0) {
+        return pax_bmsDevice;
+    } else {
+        ALOGE("PaxBMS passthrough failed to load legacy HAL.");
+        return nullptr;
+    }
+}
+
+PaxBMS::PaxBMS()
+  : mPaxBMS(NULL) {
+	  mPaxBMS = getPaxBMSDevice();
+}
+
+PaxBMS::~PaxBMS() {
+	if (mPaxBMS) {
+		mPaxBMS->common.close(reinterpret_cast<hw_device_t*>(mPaxBMS));
+		mPaxBMS = NULL;
+	}
+}
+
+// Methods from ::android::hardware::pax_bms::V1_0::IPaxBMS follow.
+Return<int32_t> PaxBMS::EnableCharge() {
+	int ret = 0;
+	int en = 1;
+
+	if (mPaxBMS) {
+		ret = mPaxBMS->bms_ctl(mPaxBMS, SET_CHG_EN, &en);
+	}
+
+	return ret;
+}
+
+// Methods from ::android::hardware::pax_bms::V1_0::IPaxBMS follow.
+Return<int32_t> PaxBMS::DisableCharge() {
+	int ret = 0;
+	int en = 0;
+
+	if (mPaxBMS) {
+		ret = mPaxBMS->bms_ctl(mPaxBMS, SET_CHG_EN, &en);
+	}
+
+	return ret;
+}
+
+// Methods from ::android::hardware::pax_bms::V1_0::IPaxBMS follow.
+Return<int32_t> PaxBMS::EnablePowerPath() {
+	int ret = 0;
+	int en = 1;
+
+	if (mPaxBMS) {
+		ret = mPaxBMS->bms_ctl(mPaxBMS, SET_POWER_PATH, &en);
+	}
+
+	return ret;
+}
+
+// Methods from ::android::hardware::pax_bms::V1_0::IPaxBMS follow.
+Return<int32_t> PaxBMS::DisablePowerPath() {
+	int ret = 0;
+	int en = 0;
+
+	if (mPaxBMS) {
+		ret = mPaxBMS->bms_ctl(mPaxBMS, SET_POWER_PATH, &en);
+	}
+
+	return ret;
+}
+
+IPaxBMS* HIDL_FETCH_IPaxBMS(const char* /* name */) {
+
+    return new PaxBMS();
+}
+
+} // namespace implementation
+}  // namespace V1_0
+}  // namespace pax_bms
+}  // namespace hardware
+}  // namespace android
diff --git a/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/PaxBMS.h b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/PaxBMS.h
new file mode 100644
index 00000000000..b58142797c0
--- /dev/null
+++ b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/PaxBMS.h
@@ -0,0 +1,63 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+#ifndef ANDROID_HARDWARE_PAX_BMS_V1_0_PAX_BMS_H
+#define ANDROID_HARDWARE_PAX_BMS_V1_0_PAX_BMS_H
+
+#include <android/hardware/pax_bms/1.0/IPaxBMS.h>
+#include <hardware/hardware.h>
+#include <hardware/pax_bms.h>
+#include <hidl/Status.h>
+#include <hidl/MQDescriptor.h>
+#include <map>
+
+#include <cutils/log.h>
+
+namespace android {
+namespace hardware {
+namespace pax_bms {
+namespace V1_0 {
+namespace implementation {
+
+using ::android::hardware::pax_bms::V1_0::IPaxBMS;
+using ::android::hardware::Return;
+using ::android::hardware::Void;
+using ::android::hardware::hidl_vec;
+using ::android::hardware::hidl_string;
+using ::android::sp;
+
+struct PaxBMS : public IPaxBMS{
+    PaxBMS();
+    ~PaxBMS();
+
+    // Methods from ::android::hardware::pax_bms::V1_0::IPaxBMS follow.
+    Return<int32_t> EnableCharge()  override;
+	Return<int32_t> DisableCharge() override;
+	Return<int32_t> EnablePowerPath() override;
+	Return<int32_t> DisablePowerPath() override;
+
+private:
+    pax_bms_dev_t* mPaxBMS;
+};
+
+extern "C" IPaxBMS* HIDL_FETCH_IPaxBMS(const char* name);
+
+}  // namespace implementation
+}  // namespace V1_0
+}  // namespace pax_bms
+}  // namespace hardware
+}  // namespace android
+
+#endif  //ANDROID_HARDWARE_PAX_BMS_V1_0_PAX_BMS_H 
diff --git a/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/android.hardware.pax_bms@1.0-service-lazy.rc b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/android.hardware.pax_bms@1.0-service-lazy.rc
new file mode 100644
index 00000000000..6c4f29d4ecf
--- /dev/null
+++ b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/android.hardware.pax_bms@1.0-service-lazy.rc
@@ -0,0 +1,9 @@
+service pax_bms-lazyhal-1-0 /vendor/bin/hw/android.hardware.pax_bms@1.0-service-lazy
+    interface android.hardware.pax_bms@1.0::IPaxBMS default
+    oneshot
+    class hal
+    user system
+    group system
+    # shutting off pax_bms while powering-off
+    shutdown critical
+
diff --git a/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/android.hardware.pax_bms@1.0-service.rc b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/android.hardware.pax_bms@1.0-service.rc
new file mode 100644
index 00000000000..0d5ab3f2d6d
--- /dev/null
+++ b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/android.hardware.pax_bms@1.0-service.rc
@@ -0,0 +1,9 @@
+service pax_bms-hal-1-0 /vendor/bin/hw/android.hardware.pax_bms@1.0-service
+    interface android.hardware.pax_bms@1.0::IPaxBMS default
+    oneshot
+    class hal
+    user system
+    group system
+    # shutting off pax bms while powering-off
+    shutdown critical
+
diff --git a/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/service.cpp b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/service.cpp
new file mode 100644
index 00000000000..09b794950fb
--- /dev/null
+++ b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/service.cpp
@@ -0,0 +1,28 @@
+/*
+ * Copyright 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#define NDEBUG 1
+#define LOG_TAG "android.hardware.pax_bms@2.0-service-mediatek"
+
+#include <android/hardware/pax_bms/1.0/IPaxBMS.h>
+#include <hidl/LegacySupport.h>
+
+using android::hardware::pax_bms::V1_0::IPaxBMS;
+using android::hardware::defaultPassthroughServiceImplementation;
+
+int main() {
+    return defaultPassthroughServiceImplementation<IPaxBMS>();
+}
diff --git a/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/serviceLazy.cpp b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/serviceLazy.cpp
new file mode 100644
index 00000000000..d8fb002342e
--- /dev/null
+++ b/vendor/mediatek/proprietary/hardware/libpax_bms/1.0/default/serviceLazy.cpp
@@ -0,0 +1,25 @@
+/*
+ * Copyright 2019 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include <android/hardware/pax_bms/1.0/IPaxBMS.h>
+#include <hidl/LegacySupport.h>
+
+using android::hardware::defaultLazyPassthroughServiceImplementation;
+using android::hardware::pax_bms::V1_0::IPaxBMS;
+
+int main() {
+    return defaultLazyPassthroughServiceImplementation<IPaxBMS>();
+}
diff --git a/vendor/mediatek/proprietary/hardware/libpax_bms/Android.mk b/vendor/mediatek/proprietary/hardware/libpax_bms/Android.mk
new file mode 100644
index 00000000000..7c15eb1359a
--- /dev/null
+++ b/vendor/mediatek/proprietary/hardware/libpax_bms/Android.mk
@@ -0,0 +1,57 @@
+# Copyright (C) 2008 The Android Open Source Project
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+
+LOCAL_PATH:= $(call my-dir)
+# HAL module implemenation, not prelinked and stored in
+# hw/<COPYPIX_HARDWARE_MODULE_ID>.<ro.board.platform>.so
+include $(CLEAR_VARS)
+LOCAL_HEADER_LIBRARIES := libhardware_headers
+
+LOCAL_SRC_FILES := pax_bms.c
+LOCAL_MULTILIB := both
+
+LOCAL_MODULE_TAGS := optional
+LOCAL_PRELINK_MODULE := false
+LOCAL_MODULE_RELATIVE_PATH := hw
+
+LOCAL_SHARED_LIBRARIES := liblog
+
+LOCAL_MODULE := pax_bms.$(TARGET_BOARD_PLATFORM)
+LOCAL_PROPRIETARY_MODULE := true
+LOCAL_MODULE_OWNER := mtk
+
+include $(MTK_SHARED_LIBRARY)
+
+#################### test #####################
+include $(CLEAR_VARS)
+LOCAL_HEADER_LIBRARIES := libhardware_headers
+
+LOCAL_MODULE_RELATIVE_PATH := hw
+LOCAL_MODULE := pax_bms_test
+LOCAL_SRC_FILES := pax_bms_test.c
+LOCAL_PROPRIETARY_MODULE := true
+LOCAL_MODULE_OWNER := mtk
+LOCAL_SHARED_LIBRARIES := \
+				liblog	\
+				libdl	\
+				libbase	\
+				libcutils	\
+				libutils	\
+				libhardware \
+				libhardware_legacy
+
+include $(BUILD_EXECUTABLE)
+	
+include $(LOCAL_PATH)/1.0/default/Android.mk
diff --git a/vendor/mediatek/proprietary/hardware/libpax_bms/pax_bms.c b/vendor/mediatek/proprietary/hardware/libpax_bms/pax_bms.c
new file mode 100755
index 00000000000..30771450df4
--- /dev/null
+++ b/vendor/mediatek/proprietary/hardware/libpax_bms/pax_bms.c
@@ -0,0 +1,191 @@
+/* Copyright Statement:
+ *
+ * This software/firmware and related documentation ("MediaTek Software") are
+ * protected under relevant copyright laws. The information contained herein is
+ * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
+ * the prior written permission of MediaTek inc. and/or its licensors, any
+ * reproduction, modification, use or disclosure of MediaTek Software, and
+ * information contained herein, in whole or in part, shall be strictly
+ * prohibited.
+ * 
+ * MediaTek Inc. (C) 2010. All rights reserved.
+ * 
+ * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
+ * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
+ * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
+ * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
+ * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
+ * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
+ * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
+ * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
+ * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
+ * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
+ * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
+ * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
+ * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
+ * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
+ * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
+ * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
+ * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
+ * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
+ *
+ * The following software/firmware and/or related documentation ("MediaTek
+ * Software") have been modified by MediaTek Inc. All revisions are subject to
+ * any receiver's applicable license agreements with MediaTek Inc.
+ */
+
+/*
+ * Copyright (C) 2008 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+#define LOG_TAG "bms"
+
+
+#include <log/log.h>
+
+#include <stdint.h>
+#include <string.h>
+#include <unistd.h>
+#include <errno.h>
+#include <fcntl.h>
+#include <pthread.h>
+#include <time.h>
+#include <stdlib.h>
+#include <sys/ioctl.h>
+#include <sys/types.h>
+
+#include <hardware/pax_bms.h>
+
+/******************************************************************************/
+
+static pthread_once_t g_init = PTHREAD_ONCE_INIT;
+static pthread_mutex_t g_lock = PTHREAD_MUTEX_INITIALIZER;
+
+#define PAX_BMS_DEV			"/dev/pax_bms"
+
+/**
+ * device methods
+ */
+
+void init_globals(void)
+{
+    // init the mutex
+    pthread_mutex_init(&g_lock, NULL);
+}
+
+static int open_pax_bms_dev(void)
+{
+	int fd = -1;
+
+	fd = open(PAX_BMS_DEV, O_RDWR);
+
+	return fd;
+}
+
+/** Close the pax bms device */
+static int
+close_pax_bms(struct pax_bms_dev_t *dev)
+{
+    if (dev) {
+        free(dev);
+    }
+    return 0;
+}
+
+static int pax_bms_ctl(struct pax_bms_dev_t *dev, unsigned long cmd, void *data)
+{
+	static int pax_bms_fd = -1;
+	int ret = -1;
+
+	if (dev == NULL)
+		return -1;
+
+	if (pax_bms_fd < 0) {
+		pax_bms_fd = open_pax_bms_dev();
+
+		if (pax_bms_fd < 0) {
+			return -ENODEV;
+		}
+	}
+
+    pthread_mutex_lock(&g_lock);
+
+	switch(cmd) {
+		case SET_CHG_EN:
+		case SET_POWER_PATH:
+			{
+				int en = *(int *)data;
+				ret = ioctl(pax_bms_fd, cmd, &en);
+			}
+			break;
+		default:
+			break;
+	};
+
+    pthread_mutex_unlock(&g_lock);
+
+	return ret;
+}
+
+/******************************************************************************/
+
+/**
+ * module methods
+ */
+
+/** Open a new instance of a device using name */
+static int open_pax_bms(const struct hw_module_t* module, char const* name,
+        struct hw_device_t** device)
+{
+    pthread_once(&g_init, init_globals);
+
+	if (strcmp(PAX_BMS_HARDWARE_MODULE_ID, name) != 0)
+		return -1;
+
+    struct pax_bms_dev_t *dev = malloc(sizeof(struct pax_bms_dev_t));
+    if (!dev)
+        return -ENOMEM;
+
+    memset(dev, 0, sizeof(*dev));
+
+    dev->common.tag = HARDWARE_DEVICE_TAG;
+    dev->common.version = 0;
+    dev->common.module = (struct hw_module_t*)module;
+    dev->common.close = (int (*)(struct hw_device_t*))close_pax_bms;
+    dev->bms_ctl = pax_bms_ctl;
+
+    *device = (struct hw_device_t*)dev;
+    return 0;
+}
+
+
+static struct hw_module_methods_t pax_bms_module_methods = {
+    .open =  open_pax_bms,
+};
+
+/*
+ * The pax bms Module
+ */
+struct hw_module_t HAL_MODULE_INFO_SYM = {
+    .tag = HARDWARE_MODULE_TAG,
+    //.version_major = 1,
+    //.version_minor = 0,
+    .id = PAX_BMS_HARDWARE_MODULE_ID,
+    .name = "pax_bms Module",
+    .author = "pax",
+    .methods = &pax_bms_module_methods,
+};
diff --git a/vendor/mediatek/proprietary/hardware/libpax_bms/pax_bms_test.c b/vendor/mediatek/proprietary/hardware/libpax_bms/pax_bms_test.c
new file mode 100644
index 00000000000..e1ec5120001
--- /dev/null
+++ b/vendor/mediatek/proprietary/hardware/libpax_bms/pax_bms_test.c
@@ -0,0 +1,43 @@
+#include <log/log.h>
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <errno.h>
+#include <hardware/hardware.h>
+
+#include <hardware/pax_bms.h>
+
+int main(int arg, char **argv)
+{
+	const hw_module_t* hwModule = NULL;
+	struct pax_bms_dev_t *pax_bms_dev = NULL;
+	int chg_en = 1;
+	int pp_en = 1;
+	
+	int ret = hw_get_module (PAX_BMS_HARDWARE_MODULE_ID, &hwModule);
+	if (ret != 0) {
+		ALOGE("hw_get_module %s failed\n", PAX_BMS_HARDWARE_MODULE_ID);
+		return -1;
+	}
+
+	ret = hwModule->methods->open(hwModule, PAX_BMS_HARDWARE_MODULE_ID, (struct hw_device_t **)&pax_bms_dev);
+	if (ret < 0) {
+		ALOGE("hw open %s failed\n", PAX_BMS_HARDWARE_MODULE_ID);
+		return -1;
+	}
+
+	if (arg > 2) {
+		chg_en = atoi(argv[1]);
+		pp_en = atoi(argv[2]);
+		pax_bms_dev->bms_ctl(pax_bms_dev, SET_POWER_PATH, &pp_en);
+		pax_bms_dev->bms_ctl(pax_bms_dev, SET_CHG_EN, &chg_en);
+	}
+	else if (arg > 1) {
+		chg_en = atoi(argv[1]);
+		pax_bms_dev->bms_ctl(pax_bms_dev, SET_CHG_EN, &chg_en);
+	}
+
+
+	return 0;
+}
diff --git a/vendor/mediatek/proprietary/hardware/mtk-hidl-service/Android.mk b/vendor/mediatek/proprietary/hardware/mtk-hidl-service/Android.mk
index d8e5e306de1..d8f5f70318e 100644
--- a/vendor/mediatek/proprietary/hardware/mtk-hidl-service/Android.mk
+++ b/vendor/mediatek/proprietary/hardware/mtk-hidl-service/Android.mk
@@ -30,6 +30,11 @@ LOCAL_SHARED_LIBRARIES += \
     android.hardware.graphics.allocator@2.0 \
     vendor.mediatek.hardware.gpu@1.0 \
 
+#ADD BEGIN by shanliangliang@paxsz.com, add for BMS 2021/07/12
+LOCAL_SHARED_LIBRARIES += \
+    android.hardware.pax_bms@1.0 \
+#ADD END by shanliangliang@paxsz.com, add for BMS 2021/07/12
+
     LOCAL_REQUIRED_MODULES := \
         android.hardware.thermal@2.0-impl
 
diff --git a/vendor/mediatek/proprietary/hardware/mtk-hidl-service/service.cpp b/vendor/mediatek/proprietary/hardware/mtk-hidl-service/service.cpp
index be73b5d2be9..0461dbd9a22 100644
--- a/vendor/mediatek/proprietary/hardware/mtk-hidl-service/service.cpp
+++ b/vendor/mediatek/proprietary/hardware/mtk-hidl-service/service.cpp
@@ -27,6 +27,10 @@
 #include <android/hardware/gnss/2.1/IGnss.h>
 #endif
 
+//ADD BEGIN by shanliangliang@paxsz.com, add for BMS 2021/07/12
+#include <android/hardware/pax_bms/1.0/IPaxBMS.h>
+//ADD END by shanliangliang@paxsz.com, add for BMS 2021/07/12
+
 using ::android::OK;
 using ::android::status_t;
 using ::android::hardware::configureRpcThreadpool;
@@ -40,6 +44,10 @@ using ::vendor::mediatek::hardware::gpu::V1_0::IGraphicExt;
 using ::android::hardware::gnss::V2_1::IGnss;
 #endif
 
+//ADD BEGIN by shanliangliang@paxsz.com, add for BMS 2021/07/12
+using ::android::hardware::pax_bms::V1_0::IPaxBMS;
+//ADD END by shanliangliang@paxsz.com, add for BMS 2021/07/12
+
 #define register(service) do { \
     status_t err = registerPassthroughServiceImplementation<service>(); \
     if (err != OK) { \
@@ -59,6 +67,10 @@ void* mtkHidlService(void *data)
     register(IAllocator);
     register(IGraphicExt);
 
+//ADD BEGIN by shanliangliang@paxsz.com, add for BMS 2021/07/12
+    register(IPaxBMS);
+//ADD END by shanliangliang@paxsz.com, add for BMS 2021/07/12
+
 #ifdef MTK_GPS_SUPPORT
     register(IGnss);
     ::vendor::mediatek::hardware::lbs::V1_0::implementation::cpp_main();
-- 
2.17.1

